{"ast":null,"code":"var _jsxFileName = \"/Users/danielnichols/Desktop/Udemy/bwf-web/src/components/events/events-list.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { DateTime } from 'luxon';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventList({\n  events\n}) {\n  _s();\n  const navigate = useNavigate();\n  const openEvent = eventID => {\n    navigate(`/event/${eventID}`);\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Events:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), events && events.map(event => {\n      const format = \"yyyy-MM-dd'T'HH:mm:ss'Z'\";\n      const evtTime = DateTime.fromFormat(event.time, format);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => openEvent(event.id),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [event.team1, \" VS \", event.team2, \"\\xA0  :   \\xA0\", /*#__PURE__*/_jsxDEV(CalendarTodayIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 21\n          }, this), evtTime.toSQLDate(), /*#__PURE__*/_jsxDEV(AlarmIcon, {\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }, this), evtTime.toFormat('HH:mm')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this)\n      }, event.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 20\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(EventList, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = EventList;\nvar _c;\n$RefreshReg$(_c, \"EventList\");","map":{"version":3,"names":["React","DateTime","CalendarTodayIcon","AlarmIcon","useNavigate","jsxDEV","_jsxDEV","EventList","events","_s","navigate","openEvent","eventID","Fragment","children","fileName","_jsxFileName","lineNumber","columnNumber","map","event","format","evtTime","fromFormat","time","onClick","id","team1","team2","color","toSQLDate","toFormat","_c","$RefreshReg$"],"sources":["/Users/danielnichols/Desktop/Udemy/bwf-web/src/components/events/events-list.js"],"sourcesContent":["import React from 'react';\nimport { DateTime } from 'luxon';\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday';\nimport AlarmIcon from '@mui/icons-material/Alarm';\nimport { useNavigate } from 'react-router-dom';\n\nexport default function EventList({events}){\n\n    const navigate = useNavigate()\n    const openEvent = eventID => {\n        navigate(`/event/${eventID}`)\n    }\n\n    return (\n\n        <React.Fragment>\n        <h3>Events:</h3>\n            { events && events.map  ( event => {\n            \n            const format = \"yyyy-MM-dd'T'HH:mm:ss'Z'\";\n            const evtTime = DateTime.fromFormat(event.time, format)\n            \n            return <div key={event.id} onClick={() => openEvent(event.id) }>\n                <p>{event.team1} VS {event.team2}\n                    &nbsp;  :   &nbsp;\n                    <CalendarTodayIcon color=\"primary\" />{ evtTime.toSQLDate() } \n                    <AlarmIcon color=\"primary\" />{ evtTime.toFormat('HH:mm') }\n                </p>\n            </div>\n            })}\n        </React.Fragment>\n\n    )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,SAAS,MAAM,2BAA2B;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,eAAe,SAASC,SAASA,CAAC;EAACC;AAAM,CAAC,EAAC;EAAAC,EAAA;EAEvC,MAAMC,QAAQ,GAAGN,WAAW,CAAC,CAAC;EAC9B,MAAMO,SAAS,GAAGC,OAAO,IAAI;IACzBF,QAAQ,CAAE,UAASE,OAAQ,EAAC,CAAC;EACjC,CAAC;EAED,oBAEIN,OAAA,CAACN,KAAK,CAACa,QAAQ;IAAAC,QAAA,gBACfR,OAAA;MAAAQ,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACVV,MAAM,IAAIA,MAAM,CAACW,GAAG,CAAIC,KAAK,IAAI;MAEnC,MAAMC,MAAM,GAAG,0BAA0B;MACzC,MAAMC,OAAO,GAAGrB,QAAQ,CAACsB,UAAU,CAACH,KAAK,CAACI,IAAI,EAAEH,MAAM,CAAC;MAEvD,oBAAOf,OAAA;QAAoBmB,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAACS,KAAK,CAACM,EAAE,CAAG;QAAAZ,QAAA,eAC3DR,OAAA;UAAAQ,QAAA,GAAIM,KAAK,CAACO,KAAK,EAAC,MAAI,EAACP,KAAK,CAACQ,KAAK,EAAC,gBAE7B,eAAAtB,OAAA,CAACJ,iBAAiB;YAAC2B,KAAK,EAAC;UAAS;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAAEI,OAAO,CAACQ,SAAS,CAAC,CAAC,eAC1DxB,OAAA,CAACH,SAAS;YAAC0B,KAAK,EAAC;UAAS;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,EAAEI,OAAO,CAACS,QAAQ,CAAC,OAAO,CAAC;QAAA;UAAAhB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzD;MAAC,GALSE,KAAK,CAACM,EAAE;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMpB,CAAC;IACN,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAGzB;AAACT,EAAA,CA3BuBF,SAAS;EAAA,QAEZH,WAAW;AAAA;AAAA4B,EAAA,GAFRzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}